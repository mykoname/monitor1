# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
# automated_monitor1

!!!!!trying search '.ru'

"""
import numpy as np
import pandas as pd
import re
import codecs
datafilename = "d:/progs/avtom_monitor/06-12_12_2021/6-12_12_2021_groups&pages.csv"
dataf = pd.read_csv(datafilename, index_col= None, encoding='utf-8-sig')
df = dataf  # назначаю df  для игрищ, а dataf - полный фрейм
df.shape  #receiving a data structure
df.dtypes  #выяснение типа данных в столбцах
df.head

# df.iloc[1]    #доступ к строке по порядку(номеру(?))
# df2.loc[:,'Message']   #доступ к столбцу по названию
# df2.id1 = list(range(len(df.index)))  #вставка во фрейм в сущестуующий столбец порядковых индексов
#! df3 = df.assign(id2=list(range(len(df.index))))  #вставка в нов.фрейм столбца с порядковыми индексами
#! df3.set_index(['id2'])  #назначения столбца индексом
# df.reset_index       #убирание индекса(ов)
# вероятно, потом если буду брать два файла по отдельности, 
# для того чтоб их соединить вероятно надо будет поиграться с индексами ??
# df['Message'].memory_usage(deep=True)   #сколько памяти использует столбец 
# df.memory_usage(deep=True)

#! df.nunique() # подсчет уникальных элементов  # df['Type'].nunique()  -- а это если в одном столбце
# подсчет кол-ва групп и пабликов из которых взяты данные:
df['Group Name'].nunique() 

# выборка всех, где в столбце Message есть  СССР
# df_5=df[(df['Message'].isnull() != True) & (df['Message'].str.contains('СССР'))]

# пробую три слова на выбор:
## df_6=df[(df['Message'].isnull() != True) & ((df['Message'].str.contains('СССР')) 
##        | (df['Message'].str.contains('СРСР')) | (df['Message'].str.contains('детст')))]

#!! пробую исключить думскую ():
#df_7=df[((df['Message'].isnull() != True) & (~ (df['Group Name'].str.contains('Думская net'))))
#        & ((df['Message'].str.contains('СССР')) 
#        | (df['Message'].str.contains('СРСР')) 
#        | (df['Message'].str.contains('детст')))]

# например вот это берет все месседжи, в которых что-то есть и убирает думскую:  
# df_7777=df[((df['Message'].isnull() != True) & (~ (df['Group Name'].str.contains('Думская'))))]

#списки:
#! список хороших групп (пока второй-третей группы нет -- не беру):
#    l_good_groups = ['Думская net','']
#    groupsgood = '|'.join(l_good_groups) 
# список плохих групп(потенциально сплошь пропаганда):
    
# список хороших URL's & Links (еще поотслеживать: ukr-times.in.ua, 400928366716548 (одесса творческая), 106963360910053):
# "стоп гремлин"    
l_good_links = ['205838236106547','DumskayaTV','usionline.com',
                    '1352747551511718','gov.ua','ukr-times.in.ua',
                    '400928366716548', '106963360910053', 'liga.net',
                    '#ЭкскурсиипоОдессе', '#фотоОдессы', '#историяОдессы', 
                    '#гидпоОдессе', '#гидОдесса', '#МестовстречиОдесса', 'mesto.vstrechi.Odessa']
linksgood = '|'.join(l_good_links)  

#! список хороших в Description (пока добавляю в хор линки):    
#    l_good_descr = ['gov.ua']


#список под 5 критерий: 
# точно не беру или ищу адекв замену:'молоды' 'российский' 'бессмертн']# Кремль', 'Москв']'как в детств''молодост'
# найти хвосты правильно: отечественной эстрады
# сомительно, но для количества можно взять: 'А знаете ли Вы?' (пока взял) 
# надо проверять еще: 'комсомол'
# надо бы но как-то скорректировать дополнительно(возможно, по источнику -- хор/не_хор): 'советск''отечество'
# пока не беру след слова: 'детст',  'ХХ',    'г.', 'год', СРСР
#                'Росси', 'российск', 'россиян', 'русски', 'русско','ГОСТу'
# пока беру, но возможно не надо: 'Та ещё Одесса', "Та еще Одесса", 'привет из прошлого',
#              'из прошлой жизни', 'пионер','коммунист'
# РСФСР пока не беру, потом можно, но надо отсекать по языку группы или поста -- если укр, то не брать

l_5mark = ['отечественной эстрады', "отечественная эстрада", 'ВМФ России', 'ВМФ РФ', 'Питер', 'Красная Армия',
   'Маршал Победы', "Жуков", 'росСМИ', "рос-СМИ", "Аэрофлот", '100001952462898', "658764777849387",
   '1912264852341821', '590624458721237',
   "ностальг", 
   'Вот такая Одесса', 
   'советские фильмы', 'советский фильм', "советских фильм", 'молодежи не понять', 'Та ещё Одесса', "Та еще Одесса",
   'А знаете ли Вы?',
   'привет из прошлого', 'из прошлой жизни', 'пионер','коммунист', 'Мульт из СССР',  
   'артист СССР', 'артист РСФСР', "артистка РСФСР", "артистка СССР", "#Ленинград", "#ТоварищКино", "#СССР",
               'ПУТЕШЕСТВИЕ ВО ВРЕМЕНИ',
               'ОДЕССА В СТАРОЙ КИНОХРОНИКЕ',
               'КИНОСЪЁМОЧНЫЕ ПЛОЩАДКИ ОДЕССЫ',
               'ОДЕССА В СТАРЫХ ФОТОГРАФИЯХ',            
               'советская Одесса',
               '50-е', '60-е', '70-е', '80-е',
               '50-х', '60-х', '70-х', '80-х',
               '50-ом', '60-е', '70-е', '80-е',
               'в старых фотографиях',
               'старая аркадия', 'старая Аркадия',
               'старая дерибасовская', 'старая Дерибасовская',
               'фотоархивы',
               'наш день 9 мая',
]

mark5 = '|'.join(l_5mark) 
#  поиск потенциальных пропаг. постов в месседжах по 5 критерию:    
df_5=df[((~ (df['Group Name'].str.contains('Думская net')))
               & (~ (df['Link'].str.contains(linksgood, na=False)))
               & (~ (df['Message'].str.contains(linksgood, na=False)))
               & (~ (df['Description'].str.contains(linksgood, na=False)))
               & (~ (df['URL'].str.contains(linksgood, na=False)))  )              
               & (((df['Message'].str.contains(mark5, na=False)))
               | ((df['Link Text'].str.contains(mark5, na=False)))
               | ((df['Image Text'].str.contains(mark5, na=False)))
               | ((df['Link'].str.contains(mark5, na=False)))
               | ((df['Description'].str.contains(mark5, na=False)))
               )]

#экспорт в csv:
df_5.to_csv("df_5vse.csv",encoding='utf-8-sig')

# Подсчет пересечения (надо еще доразобраться (возм., лучше взять конкатенацию (внизу))):

# полдсчет количества уникальных групп:
# разобраться еще с их списком и подсчетом их аудитории
# df_1234567 = pd.concat([df_1,df_2,df_3,df_4,df_5,df_6,df_7])
# print df_1234567['Group Name'].nunique()